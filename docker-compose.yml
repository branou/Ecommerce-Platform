services:
  # PostgreSQL service for the backend
  postgres:
    image: postgres
    container_name: postgres-db
    environment:
      POSTGRES_DB: ecommerce_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    restart: always

      # Redis service
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend
    restart: always
    # RedisInsight service
  redisinsight:
    image: redis/redisinsight
    container_name: redisinsight
    ports:
      - "8001:5540"
    volumes:
      - redisinsight-data:/db
    networks:
      - backend
    restart: always

# my Spring Boot backend service (e.g., springboot-backend)
  #springboot-backend:
  #  build: ./ecommerce-backend
    #container_name: springboot-backend
   # environment:
      #SPRING_DATASOURCE_URL : jdbc:postgresql://postgres:5432/ecommerce_db
      #SPRING_DATASOURCE_USERNAME : admin
      #SPRING_DATASOURCE_PASSWORD : password
     # KEYCLOAK_JWT_ISSUER : http://keycloack:8080/realms/myRealm
    #ports:
    #  - "8082:8082"
   # depends_on:
      #- redis
     # - redisinsight
    #  - keycloak
   #   - postgres
  #  networks:
 #     - backend

# Keycloak service and its PostgreSQL database
  postgres-service:
    image: postgres
    container_name: postgres-service
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: k1234
    ports:
      - '5434:5432'
    expose:
      - '5434'
  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: him@gmail.com
      PGADMIN_DEFAULT_PASSWORD: azer
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-service:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: k1234
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    command:
      - start-dev
    restart: always
    ports:
      - '8080:8080'
    expose:
      - '8080'
    volumes:
      - keycloak-data:/opt/keycloak/data
    depends_on:
      - postgres-service

networks:
  backend:
    driver: bridge

volumes:
  postgres-data:
  redisinsight-data:
  redis-data:
  pgadmin_data:
  postgres_data_keycloak:
  keycloak-data:



 ######################################################################################
  # MongoDB service
  #mongo:
  #  image: mongo
  #  restart: always
  #  container_name: mongo-db
  #  environment:
  #    - MONGO_INITDB_ROOT_USERNAME=adminDb
  #    - MONGO_INITDB_ROOT_PASSWORD=passwordDb
  #    - MONGO_INITDB_DATABASE=ecommerce_db
  #  ports:
  #    - "27017:27017"
  #  volumes:
  #    - mongo-data:/data/db
  #  networks:
  #    - backend
  # Mongo Express service
  #mongo-express:
  #  image: mongo-express
  #  restart: always
  #  ports:
  #    - 8081:8081
  #  environment:
  #    ME_CONFIG_MONGODB_ADMINUSERNAME: adminDb
  #    ME_CONFIG_MONGODB_ADMINPASSWORD: passwordDb
  #    ME_CONFIG_MONGODB_URL: mongodb://adminDb:passwordDb@mongo:27017/
  #    ME_CONFIG_BASICAUTH: false
  #  networks:
  #    - backend
  #  depends_on:
  #    - mongo
####################################################################################
